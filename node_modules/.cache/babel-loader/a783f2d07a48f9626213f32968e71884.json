{"ast":null,"code":"import axios from 'axios';\nimport { ToastContainer, toast } from 'react-toastify';\nimport 'react-toastify/dist/ReactToastify.css';\ntoast.configure();\nexport const register = user => {\n  return axios // .post('http://localhost:5000/users/register', {\n  .post('users/register', {\n    username: user.username,\n    phone: user.phone,\n    email: user.email,\n    password: user.password,\n    name: user.name,\n    address: user.address,\n    status: user.status\n  }).then(res => {\n    if (res.data.status == true) {\n      // alert(res.data.data)\n      toast(res.data.data, {\n        position: toast.POSITION.TOP_CENTER,\n        autoClose: 1000\n      });\n    } else if (res.data.status == false) {\n      // alert(res.data.error)\n      toast(res.data.error, {\n        position: toast.POSITION.TOP_CENTER,\n        autoClose: 1000\n      });\n    }\n  });\n};\nexport const login = user => {\n  return axios.post('http://localhost:5000/users/login', {\n    // .post('users/login', {\n    username: user.username,\n    password: user.password,\n    status: user.status\n  }).then(res => {\n    if (res.data.status == true) {\n      console.log('Login!'); // alert(\"Login Successful\")\n\n      toast(\"Login Successful\", {\n        position: toast.POSITION.TOP_CENTER,\n        autoClose: 1000\n      });\n      localStorage.setItem('usertoken', res.data.accesstoken);\n      return res.data.accesstoken;\n    } else if (res.data.status == false) {\n      // alert(res.data.error)\n      toast(res.data.error, {\n        position: toast.POSITION.TOP_CENTER,\n        autoClose: 1000\n      });\n    }\n  }).catch(err => {\n    // alert(err)\n    toast(err, {\n      position: toast.POSITION.TOP_CENTER,\n      autoClose: 1000\n    });\n  });\n};","map":{"version":3,"sources":["C:/Users/chaur/Desktop/homechef-mern-new/homechef/front-end/src/components/login/UserFunctions.js"],"names":["axios","ToastContainer","toast","configure","register","user","post","username","phone","email","password","name","address","status","then","res","data","position","POSITION","TOP_CENTER","autoClose","error","login","console","log","localStorage","setItem","accesstoken","catch","err"],"mappings":"AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,cAAT,EAAyBC,KAAzB,QAAsC,gBAAtC;AACA,OAAO,uCAAP;AAEAA,KAAK,CAACC,SAAN;AACA,OAAO,MAAMC,QAAQ,GAAGC,IAAI,IAAI;AAC5B,SAAOL,KAAK,CACR;AADQ,GAEPM,IAFE,CAEG,gBAFH,EAEqB;AACpBC,IAAAA,QAAQ,EAAEF,IAAI,CAACE,QADK;AAEpBC,IAAAA,KAAK,EAAEH,IAAI,CAACG,KAFQ;AAGpBC,IAAAA,KAAK,EAAEJ,IAAI,CAACI,KAHQ;AAIpBC,IAAAA,QAAQ,EAAEL,IAAI,CAACK,QAJK;AAKpBC,IAAAA,IAAI,EAAEN,IAAI,CAACM,IALS;AAMpBC,IAAAA,OAAO,EAAEP,IAAI,CAACO,OANM;AAOpBC,IAAAA,MAAM,EAAER,IAAI,CAACQ;AAPO,GAFrB,EAWFC,IAXE,CAWGC,GAAG,IAAI;AACT,QAAGA,GAAG,CAACC,IAAJ,CAASH,MAAT,IAAiB,IAApB,EAAyB;AACrB;AACAX,MAAAA,KAAK,CAACa,GAAG,CAACC,IAAJ,CAASA,IAAV,EAAgB;AAACC,QAAAA,QAAQ,EAAEf,KAAK,CAACgB,QAAN,CAAeC,UAA1B;AAAsCC,QAAAA,SAAS,EAAE;AAAjD,OAAhB,CAAL;AACC,KAHL,MAIS,IAAGL,GAAG,CAACC,IAAJ,CAASH,MAAT,IAAiB,KAApB,EAA0B;AAC3B;AACAX,MAAAA,KAAK,CAACa,GAAG,CAACC,IAAJ,CAASK,KAAV,EAAiB;AAACJ,QAAAA,QAAQ,EAAEf,KAAK,CAACgB,QAAN,CAAeC,UAA1B;AAAsCC,QAAAA,SAAS,EAAE;AAAjD,OAAjB,CAAL;AACH;AACR,GApBE,CAAP;AAqBH,CAtBM;AAwBP,OAAO,MAAME,KAAK,GAAGjB,IAAI,IAAI;AACzB,SAAOL,KAAK,CACPM,IADE,CACG,mCADH,EACwC;AAC3C;AACIC,IAAAA,QAAQ,EAAEF,IAAI,CAACE,QAFwB;AAGvCG,IAAAA,QAAQ,EAAEL,IAAI,CAACK,QAHwB;AAIvCG,IAAAA,MAAM,EAAER,IAAI,CAACQ;AAJ0B,GADxC,EAOFC,IAPE,CAOGC,GAAG,IAAI;AACT,QAAGA,GAAG,CAACC,IAAJ,CAASH,MAAT,IAAiB,IAApB,EAAyB;AACzBU,MAAAA,OAAO,CAACC,GAAR,CAAY,QAAZ,EADyB,CAEzB;;AACAtB,MAAAA,KAAK,CAAC,kBAAD,EAAqB;AAACe,QAAAA,QAAQ,EAAEf,KAAK,CAACgB,QAAN,CAAeC,UAA1B;AAAsCC,QAAAA,SAAS,EAAE;AAAjD,OAArB,CAAL;AACAK,MAAAA,YAAY,CAACC,OAAb,CAAqB,WAArB,EAAiCX,GAAG,CAACC,IAAJ,CAASW,WAA1C;AACA,aAAOZ,GAAG,CAACC,IAAJ,CAASW,WAAhB;AACC,KAND,MAOK,IAAGZ,GAAG,CAACC,IAAJ,CAASH,MAAT,IAAiB,KAApB,EAA0B;AAC3B;AACAX,MAAAA,KAAK,CAACa,GAAG,CAACC,IAAJ,CAASK,KAAV,EAAiB;AAACJ,QAAAA,QAAQ,EAAEf,KAAK,CAACgB,QAAN,CAAeC,UAA1B;AAAsCC,QAAAA,SAAS,EAAE;AAAjD,OAAjB,CAAL;AAEH;AACJ,GApBE,EAqBFQ,KArBE,CAqBIC,GAAG,IAAI;AACV;AACA3B,IAAAA,KAAK,CAAC2B,GAAD,EAAM;AAACZ,MAAAA,QAAQ,EAAEf,KAAK,CAACgB,QAAN,CAAeC,UAA1B;AAAsCC,MAAAA,SAAS,EAAE;AAAjD,KAAN,CAAL;AAEH,GAzBE,CAAP;AA0BH,CA3BM","sourcesContent":["import axios from 'axios'\r\nimport { ToastContainer, toast } from 'react-toastify';\r\nimport 'react-toastify/dist/ReactToastify.css';\r\n\r\ntoast.configure()\r\nexport const register = user => {\r\n    return axios\r\n        // .post('http://localhost:5000/users/register', {\r\n        .post('users/register', {\r\n            username: user.username,\r\n            phone: user.phone,\r\n            email: user.email,\r\n            password: user.password,\r\n            name: user.name,\r\n            address: user.address,\r\n            status: user.status,\r\n        })\r\n        .then(res => {\r\n            if(res.data.status==true){\r\n                // alert(res.data.data)\r\n                toast(res.data.data, {position: toast.POSITION.TOP_CENTER, autoClose: 1000});\r\n                }\r\n                else if(res.data.status==false){\r\n                    // alert(res.data.error)\r\n                    toast(res.data.error, {position: toast.POSITION.TOP_CENTER, autoClose: 1000});\r\n                }  \r\n        })\r\n}\r\n\r\nexport const login = user => {\r\n    return axios\r\n        .post('http://localhost:5000/users/login', {\r\n        // .post('users/login', {\r\n            username: user.username,\r\n            password: user.password,\r\n            status: user.status,\r\n        })\r\n        .then(res => {\r\n            if(res.data.status==true){\r\n            console.log('Login!')\r\n            // alert(\"Login Successful\")\r\n            toast(\"Login Successful\", {position: toast.POSITION.TOP_CENTER, autoClose: 1000});\r\n            localStorage.setItem('usertoken',res.data.accesstoken)\r\n            return res.data.accesstoken\r\n            }\r\n            else if(res.data.status==false){\r\n                // alert(res.data.error)\r\n                toast(res.data.error, {position: toast.POSITION.TOP_CENTER, autoClose: 1000});\r\n\r\n            }\r\n        })\r\n        .catch(err => {\r\n            // alert(err)\r\n            toast(err, {position: toast.POSITION.TOP_CENTER, autoClose: 1000});\r\n\r\n        })\r\n}\r\n\r\n"]},"metadata":{},"sourceType":"module"}