{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\chaur\\\\Desktop\\\\homechef-mern-new\\\\homechef\\\\front-end\\\\src\\\\AnalyticsCharts.js\";\nimport React, { Component } from 'react';\nimport { Bar } from 'react-chartjs-2';\nimport { CSVLink } from \"react-csv\";\nimport axios from 'axios';\nimport { ToastContainer, toast } from 'react-toastify';\nexport default class AnalyticsCharts extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      salesperdish: [{\n        dish: 'Pavbhaji',\n        amount: 20\n      }],\n      chartData: {\n        labels: [],\n        datasets: [{\n          label: 'sales',\n          data: [],\n          backgroundColor: ['rgba(255,99,132,0.6)', 'rgba(54,152,235,0.6)', 'rgba(75,192,192,0.6)', 'rgba(255,159,100,0.6)', 'rgba(97,25,8,0.6)']\n        }]\n      }\n    };\n  }\n\n  componentDidMount() {\n    axios.get('http://localhost:5000/homechef/profile', {\n      headers: {\n        'auth-token': localStorage.usertoken\n      }\n    }).then(res => {\n      console.log(res);\n\n      if (res.data.status == true) {\n        axios.get('homechef/analysis', {\n          headers: {\n            'auth-token': localStorage.usertoken\n          }\n        }).then(res => {\n          let array = res.data.data.sales;\n          let data;\n          let sales = [],\n              dish = [],\n              amounts = [];\n\n          for (let index = 0; index < array.length; index++) {\n            console.log(array[index][0].dish);\n            console.log(array[index][0].dish);\n            data = {\n              dish: array[index][0].dish,\n              amount: array[index][0].amount\n            };\n            dish.push(array[index][0].dish);\n            amounts.push(array[index][0].amount);\n            sales.push(data);\n          }\n\n          console.log(dish);\n          console.log(amounts);\n          this.setState({\n            chartData: {\n              labels: dish,\n              datasets: [{\n                label: 'sales',\n                data: amounts,\n                backgroundColor: ['rgba(255,99,132,0.6)', 'rgba(54,152,235,0.6)', 'rgba(75,192,192,0.6)', 'rgba(255,159,100,0.6)', 'rgba(97,25,8,0.6)']\n              }]\n            }\n          });\n          this.setState({\n            salesperdish: sales\n          });\n          console.log(this.state.chartData1.datasets.data);\n        }).catch(err => {\n          toast(err, {\n            position: toast.POSITION.TOP_CENTER\n          });\n        });\n      } else if (res.data.status == false) {\n        // alert(res.data.error)\n        toast(res.data.error, {\n          position: toast.POSITION.TOP_CENTER\n        });\n      }\n    }).catch(error => {\n      // alert(\"login first\");\n      toast(\"Login First!!\", {\n        position: toast.POSITION.TOP_CENTER\n      });\n    });\n  }\n\n  render() {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 109,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(Bar, {\n      data: this.state.chartData,\n      options: {\n        responsive: true,\n        title: {\n          display: this.props.displayTitle,\n          text: 'Sales per Dish',\n          fontSize: 20\n        },\n        legend: {\n          display: true,\n          position: 'right',\n          labels: {\n            fontColor: '#000'\n          }\n        },\n        layout: {\n          padding: {\n            left: 50,\n            right: 0,\n            bottom: 0,\n            top: 0\n          }\n        },\n        scales: {\n          yAxes: [{\n            ticks: {\n              beginAtZero: true\n            }\n          }]\n        },\n        tooltips: {\n          enabled: true\n        }\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 110,\n        columnNumber: 9\n      }\n    }), /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 145,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(CSVLink, {\n      data: this.state.salesperdish,\n      filename: \"SalesPerDish.csv\",\n      className: \"btn btn-primary\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 146,\n        columnNumber: 9\n      }\n    }, \"Sales Per Dish\")));\n  }\n\n}\nAnalyticsCharts.defaultProps = {\n  displayTitle: true,\n  displayLegend: true,\n  legendPosition: 'right'\n};","map":{"version":3,"sources":["C:/Users/chaur/Desktop/homechef-mern-new/homechef/front-end/src/AnalyticsCharts.js"],"names":["React","Component","Bar","CSVLink","axios","ToastContainer","toast","AnalyticsCharts","constructor","props","state","salesperdish","dish","amount","chartData","labels","datasets","label","data","backgroundColor","componentDidMount","get","headers","localStorage","usertoken","then","res","console","log","status","array","sales","amounts","index","length","push","setState","chartData1","catch","err","position","POSITION","TOP_CENTER","error","render","responsive","title","display","displayTitle","text","fontSize","legend","fontColor","layout","padding","left","right","bottom","top","scales","yAxes","ticks","beginAtZero","tooltips","enabled","defaultProps","displayLegend","legendPosition"],"mappings":"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","sourcesContent":["import React, {Component} from 'react';\r\nimport {Bar} from 'react-chartjs-2';\r\nimport { CSVLink } from \"react-csv\";\r\nimport axios from 'axios'\r\nimport { ToastContainer, toast } from 'react-toastify';\r\n\r\n\r\nexport default class AnalyticsCharts extends Component {\r\n\r\nconstructor(props){\r\n    super(props);\r\n    this.state={\r\n        salesperdish : [\r\n            {\r\n                dish:'Pavbhaji',\r\n                amount:20\r\n            }\r\n        ],\r\n        chartData:{\r\n            labels:[],\r\n            datasets:[{\r\n                label:'sales',\r\n                data:[],\r\n                backgroundColor: [\r\n                    'rgba(255,99,132,0.6)',\r\n                    'rgba(54,152,235,0.6)',\r\n                    'rgba(75,192,192,0.6)',\r\n                    'rgba(255,159,100,0.6)',\r\n                    'rgba(97,25,8,0.6)'\r\n                ]\r\n            }]\r\n        }\r\n    }\r\n\r\n}\r\ncomponentDidMount() {\r\n    \r\n    axios.get('http://localhost:5000/homechef/profile', {\r\n      headers: {\r\n        'auth-token': localStorage.usertoken\r\n      }})\r\n   .then(res => {\r\n       console.log(res)\r\n       if(res.data.status==true){\r\n        axios.get('homechef/analysis', {\r\n            headers: {\r\n                'auth-token': localStorage.usertoken\r\n            }}).then(res=>{\r\n                let array=res.data.data.sales;\r\n                let data;\r\n                let sales=[],dish=[],amounts=[];\r\n                for (let index = 0; index < array.length; index++) {\r\n                   console.log(array[index][0].dish);\r\n                   console.log(array[index][0].dish);\r\n                    data ={\r\n                            dish:array[index][0].dish,\r\n                            amount:array[index][0].amount\r\n                    }\r\n                    dish.push(array[index][0].dish)\r\n                    amounts.push(array[index][0].amount)\r\n                    sales.push(data);\r\n                }\r\n                console.log(dish);\r\n                console.log(amounts);\r\n\r\n                this.setState( {\r\n                    chartData:{\r\n                        labels:dish,\r\n                        datasets:[{\r\n                            label:'sales',\r\n                            data:amounts,\r\n                            backgroundColor: [\r\n                                'rgba(255,99,132,0.6)',\r\n                                'rgba(54,152,235,0.6)',\r\n                                'rgba(75,192,192,0.6)',\r\n                                'rgba(255,159,100,0.6)',\r\n                                'rgba(97,25,8,0.6)'\r\n                            ]\r\n                        }]\r\n                    }\r\n            });\r\n\r\n                this.setState({salesperdish:sales});\r\n                console.log(this.state.chartData1.datasets.data);\r\n            }).catch((err)=>{\r\n                toast(err, {position: toast.POSITION.TOP_CENTER});\r\n            })\r\n      }\r\n      else if(res.data.status==false){\r\n          // alert(res.data.error)\r\n          toast(res.data.error, {position: toast.POSITION.TOP_CENTER});\r\n      } \r\n   }\r\n   )\r\n   .catch(error => {\r\n      // alert(\"login first\");\r\n     toast(\"Login First!!\", {position: toast.POSITION.TOP_CENTER});\r\n    })\r\n  }\r\n\r\nstatic defaultProps={\r\n    displayTitle:true,\r\n    displayLegend: true,\r\n    legendPosition: 'right'\r\n}\r\n\r\n  render() {\r\n    return ( \r\n      <div>\r\n        <Bar\r\n          data={this.state.chartData}\r\n          options={{\r\n              responsive:true,\r\n            title:{\r\n                display:this.props.displayTitle,\r\n                text:'Sales per Dish',\r\n                fontSize:20\r\n          },\r\n        legend:{\r\n            display:true,\r\n            position: 'right',\r\n            labels:{\r\n                fontColor:'#000'\r\n            }\r\n        },\r\n        layout:{\r\n            padding:{\r\n                left:50,\r\n                right:0,\r\n                bottom:0,\r\n                top:0\r\n            }\r\n        },        \r\n        scales: {\r\n            yAxes: [{\r\n                ticks: {\r\n                    beginAtZero: true\r\n                }\r\n            }]\r\n        },    \r\n    tooltips:{\r\n        enabled: true\r\n    }}}\r\n        />\r\n        <div>           \r\n        <CSVLink data={this.state.salesperdish}\r\n        filename={\"SalesPerDish.csv\"}\r\n        className=\"btn btn-primary\"\r\n        >\r\n       Sales Per Dish\r\n        </CSVLink>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}"]},"metadata":{},"sourceType":"module"}