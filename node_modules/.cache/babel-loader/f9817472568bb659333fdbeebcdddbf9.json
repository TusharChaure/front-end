{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\chaur\\\\Desktop\\\\homechef-mern-new\\\\homechef\\\\front-end\\\\src\\\\FinancialCharts.js\";\nimport React, { Component } from 'react';\nimport { Bar, Line } from 'react-chartjs-2';\nimport { CSVLink } from \"react-csv\";\nimport axios from 'axios';\nimport { ToastContainer, toast } from 'react-toastify';\nexport default class AnalyticsCharts extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      status: \"true\",\n      incomeExpense: [],\n      profitloss: [],\n      chartData1: {\n        labels: [],\n        datasets: [{\n          label: 'income',\n          data: [],\n          backgroundColor: ['rgba(255,99,132,0.6)', 'rgba(255,99,132,0.6)', 'rgba(255,99,132,0.6)', 'rgba(255,99,132,0.6)', 'rgba(255,99,132,0.6)']\n        }, {\n          label: 'expense',\n          data: [],\n          backgroundColor: ['rgba(54,152,235,0.6)', 'rgba(54,152,235,0.6)', 'rgba(54,152,235,0.6)', 'rgba(54,152,235,0.6)', 'rgba(54,152,235,0.6)']\n        }]\n      },\n      chartData2: {\n        labels: [],\n        datasets: [{\n          label: 'Profit',\n          data: [],\n          backgroundColor: ['rgba(255,99,132,0.6)', 'rgba(255,99,132,0.6)', 'rgba(255,99,132,0.6)', 'rgba(255,99,132,0.6)', 'rgba(255,99,132,0.6)']\n        }, {\n          label: 'Loss',\n          data: [],\n          backgroundColor: ['rgba(54,152,235,0.6)', 'rgba(54,152,235,0.6)', 'rgba(54,152,235,0.6)', 'rgba(54,152,235,0.6)', 'rgba(54,152,235,0.6)']\n        }]\n      }\n    };\n  }\n\n  componentDidMount() {\n    // axios.get('http://localhost:5000/homechef/profile', {\n    axios.get('homechef/profile', {\n      headers: {\n        'auth-token': localStorage.usertoken\n      }\n    }).then(res => {\n      console.log(res);\n\n      if (res.data.status == true) {\n        // axios.get('http://localhost:5000/homechef/financial', {\n        axios.get('homechef/financial', {\n          headers: {\n            'auth-token': localStorage.usertoken\n          }\n        }).then(res => {\n          let array = res.data.income;\n          let arrayExpense = res.data.expense;\n          let data, pldata;\n          let income = [],\n              months = [],\n              incomes = [],\n              expense = [];\n          let profits = [],\n              loss = [],\n              pl = [];\n\n          for (let index = 0; index < array.length; index++) {\n            console.log(array[index][0]);\n\n            for (let index1 = 0; index1 < arrayExpense.length; index1++) {\n              if (array[index][0].month == arrayExpense[index1][0].month) {\n                data = {\n                  monthN: array[index][0].month,\n                  incomeN: array[index][0].amount,\n                  expenseN: arrayExpense[index1][0].amount\n                };\n                expense.push(arrayExpense[index1][0].amount);\n                months.push(array[index][0].month);\n                incomes.push(array[index][0].amount);\n\n                if (data.expenseN > data.incomeN) {\n                  loss.push(data.expenseN - data.incomeN);\n                  profits.push(0);\n                  pldata = {\n                    month: data.monthN,\n                    profilt: 0,\n                    loss: data.expenseN - data.incomeN\n                  };\n                  pl.push(pldata);\n                } else {\n                  loss.push(0);\n                  profits.push(data.incomeN - data.expenseN);\n                  pldata = {\n                    month: data.monthN,\n                    profilt: data.incomeN - data.expenseN,\n                    loss: 0\n                  };\n                  pl.push(pldata);\n                }\n\n                income.push(data);\n              }\n            }\n          }\n\n          console.log(profits);\n          console.log(loss);\n          this.setState({\n            chartData1: {\n              labels: months,\n              datasets: [{\n                label: 'income',\n                data: incomes,\n                backgroundColor: ['rgba(255,99,132,0.6)', 'rgba(255,99,132,0.6)', 'rgba(255,99,132,0.6)', 'rgba(255,99,132,0.6)', 'rgba(255,99,132,0.6)']\n              }, {\n                label: 'expense',\n                data: expense,\n                backgroundColor: ['rgba(54,152,235,0.6)', 'rgba(54,152,235,0.6)', 'rgba(54,152,235,0.6)', 'rgba(54,152,235,0.6)', 'rgba(54,152,235,0.6)']\n              }]\n            }\n          });\n          this.setState({\n            chartData2: {\n              labels: months,\n              datasets: [{\n                label: 'Profit',\n                data: profits,\n                backgroundColor: ['rgba(255,99,132,0.6)', 'rgba(255,99,132,0.6)', 'rgba(255,99,132,0.6)', 'rgba(255,99,132,0.6)', 'rgba(255,99,132,0.6)']\n              }, {\n                label: 'Loss',\n                data: loss,\n                backgroundColor: ['rgba(54,152,235,0.6)', 'rgba(54,152,235,0.6)', 'rgba(54,152,235,0.6)', 'rgba(54,152,235,0.6)', 'rgba(54,152,235,0.6)']\n              }]\n            }\n          });\n          this.setState({\n            profitloss: pl\n          });\n          this.setState({\n            incomeExpense: income\n          });\n        }).catch(err => {\n          toast(err, {\n            position: toast.POSITION.TOP_CENTER,\n            autoClose: 1000\n          });\n        });\n      } else if (res.data.status == false) {\n        // alert(res.data.error)\n        toast(res.data.error, {\n          position: toast.POSITION.TOP_CENTER,\n          autoClose: 1000\n        });\n      }\n    }).catch(error => {\n      // alert(\"login first\");\n      toast(\"Login First!!\", {\n        position: toast.POSITION.TOP_CENTER,\n        autoClose: 1000\n      });\n    });\n  }\n\n  render() {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 222,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(Bar, {\n      data: this.state.chartData1,\n      options: {\n        responsive: true,\n        title: {\n          display: this.props.displayTitle,\n          text: 'Income and Expense',\n          fontSize: 20\n        },\n        legend: {\n          display: true,\n          position: 'right',\n          labels: {\n            fontColor: '#000'\n          }\n        },\n        layout: {\n          padding: {\n            left: 50,\n            right: 0,\n            bottom: 0,\n            top: 0\n          }\n        },\n        scales: {\n          yAxes: [{\n            ticks: {\n              beginAtZero: true\n            }\n          }]\n        },\n        tooltips: {\n          enabled: true\n        }\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 224,\n        columnNumber: 7\n      }\n    }), /*#__PURE__*/React.createElement(Line, {\n      data: this.state.chartData2,\n      options: {\n        responsive: true,\n        title: {\n          display: this.props.displayTitle,\n          text: 'Profit and Loss',\n          fontSize: 20\n        },\n        legend: {\n          display: true,\n          position: 'right',\n          labels: {\n            fontColor: '#000'\n          }\n        },\n        layout: {\n          padding: {\n            left: 50,\n            right: 0,\n            bottom: 0,\n            top: 0\n          }\n        },\n        tooltips: {\n          enabled: true\n        }\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 260,\n        columnNumber: 5\n      }\n    }), /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 288,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(CSVLink, {\n      data: this.state.incomeExpense,\n      filename: \"IncomeExpense.csv\",\n      className: \"btn btn-primary\",\n      style: {\n        margin: '1%'\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 289,\n        columnNumber: 9\n      }\n    }, \"Income and expense excel download\"), /*#__PURE__*/React.createElement(CSVLink, {\n      data: this.state.profitloss,\n      filename: \"ProfitLoss.csv\",\n      className: \"btn btn-primary\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 296,\n        columnNumber: 9\n      }\n    }, \"Profit Loss Excel Document\")), /*#__PURE__*/React.createElement(ToastContainer, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 303,\n        columnNumber: 9\n      }\n    }));\n  }\n\n}\nAnalyticsCharts.defaultProps = {\n  displayTitle: true,\n  displayLegend: true,\n  legendPosition: 'right'\n};","map":{"version":3,"sources":["C:/Users/chaur/Desktop/homechef-mern-new/homechef/front-end/src/FinancialCharts.js"],"names":["React","Component","Bar","Line","CSVLink","axios","ToastContainer","toast","AnalyticsCharts","constructor","props","state","status","incomeExpense","profitloss","chartData1","labels","datasets","label","data","backgroundColor","chartData2","componentDidMount","get","headers","localStorage","usertoken","then","res","console","log","array","income","arrayExpense","expense","pldata","months","incomes","profits","loss","pl","index","length","index1","month","monthN","incomeN","amount","expenseN","push","profilt","setState","catch","err","position","POSITION","TOP_CENTER","autoClose","error","render","responsive","title","display","displayTitle","text","fontSize","legend","fontColor","layout","padding","left","right","bottom","top","scales","yAxes","ticks","beginAtZero","tooltips","enabled","margin","defaultProps","displayLegend","legendPosition"],"mappings":"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","sourcesContent":["import React, {Component} from 'react';\r\nimport {Bar, Line} from 'react-chartjs-2';\r\nimport { CSVLink } from \"react-csv\";\r\nimport axios from 'axios'\r\nimport { ToastContainer, toast } from 'react-toastify';\r\n\r\n\r\nexport default class AnalyticsCharts extends Component {\r\n\r\nconstructor(props){\r\n    super(props);\r\n    this.state={\r\n        status: \"true\",\r\n        incomeExpense : [\r\n            \r\n        ],\r\n        \r\n        profitloss : [\r\n           \r\n        ],\r\n       \r\n        chartData1:{\r\n            labels:[],\r\n            datasets:[{\r\n                label:'income',\r\n                data:[ ],\r\n                backgroundColor: [\r\n                    'rgba(255,99,132,0.6)',\r\n                    'rgba(255,99,132,0.6)',\r\n                    'rgba(255,99,132,0.6)',\r\n                    'rgba(255,99,132,0.6)',\r\n                    'rgba(255,99,132,0.6)'\r\n                    \r\n                ]\r\n            },{\r\n                label:'expense',\r\n                data:[],\r\n                backgroundColor: [\r\n                    \r\n                    'rgba(54,152,235,0.6)',\r\n                    'rgba(54,152,235,0.6)',\r\n                    'rgba(54,152,235,0.6)',\r\n                    'rgba(54,152,235,0.6)',\r\n                    'rgba(54,152,235,0.6)'\r\n                    \r\n                ]\r\n            }]\r\n        },\r\n        chartData2:{\r\n            labels:[],\r\n            datasets:[{\r\n                label:'Profit',\r\n                data:[],\r\n                backgroundColor: [\r\n                    'rgba(255,99,132,0.6)',\r\n                    'rgba(255,99,132,0.6)',\r\n                    'rgba(255,99,132,0.6)',\r\n                    'rgba(255,99,132,0.6)',\r\n                    'rgba(255,99,132,0.6)'\r\n                    \r\n                ]\r\n            },{\r\n                label:'Loss',\r\n                data:[],\r\n                backgroundColor: [\r\n                    \r\n                    'rgba(54,152,235,0.6)',\r\n                    'rgba(54,152,235,0.6)',\r\n                    'rgba(54,152,235,0.6)',\r\n                    'rgba(54,152,235,0.6)',\r\n                    'rgba(54,152,235,0.6)'\r\n                    \r\n                ]\r\n            }]\r\n        }\r\n    }\r\n\r\n}\r\ncomponentDidMount() {\r\n    \r\n    // axios.get('http://localhost:5000/homechef/profile', {\r\n    axios.get('homechef/profile', {\r\n      headers: {\r\n        'auth-token': localStorage.usertoken\r\n      }})\r\n   .then(res => {\r\n       console.log(res)\r\n       if(res.data.status==true){\r\n        // axios.get('http://localhost:5000/homechef/financial', {\r\n        axios.get('homechef/financial', {\r\n            headers: {\r\n                'auth-token': localStorage.usertoken\r\n            }}).then(res=>{\r\n                let array=res.data.income;\r\n                let arrayExpense=res.data.expense;\r\n                let data,pldata;\r\n                let income=[],months=[],incomes=[],expense=[];\r\n                let profits=[],loss=[],pl=[];\r\n                for (let index = 0; index < array.length; index++) {\r\n                    console.log(array[index][0])\r\n                    for (let index1 = 0; index1 < arrayExpense.length; index1++) {\r\n                        if(array[index][0].month==arrayExpense[index1][0].month){\r\n                            data ={\r\n                                monthN:array[index][0].month,\r\n                                incomeN:array[index][0].amount,\r\n                                expenseN:arrayExpense[index1][0].amount\r\n                            }\r\n                            expense.push(arrayExpense[index1][0].amount)           \r\n                            months.push(array[index][0].month)\r\n                            incomes.push(array[index][0].amount)\r\n                            if(data.expenseN>data.incomeN){\r\n                                loss.push(data.expenseN-data.incomeN);\r\n                                profits.push(0);\r\n                                pldata={\r\n                                   month:data.monthN,\r\n                                   profilt:0,\r\n                                   loss: data.expenseN-data.incomeN,\r\n                                }\r\n                                pl.push(pldata);\r\n                            }else{\r\n                                    loss.push(0);\r\n                                    profits.push(data.incomeN-data.expenseN);\r\n                                    pldata={\r\n                                       month:data.monthN,\r\n                                       profilt:data.incomeN-data.expenseN,\r\n                                       loss: 0,\r\n                                    }\r\n                                    pl.push(pldata);\r\n                            }\r\n                            income.push(data);  \r\n                        }\r\n                     }   \r\n                }\r\n               console.log(profits)\r\n               console.log(loss)\r\n\r\n                this.setState( {\r\n                    chartData1:{\r\n                    labels:months,\r\n                    datasets:[{\r\n                        label:'income',\r\n                        data:incomes,\r\n                        backgroundColor: [\r\n                            'rgba(255,99,132,0.6)',\r\n                            'rgba(255,99,132,0.6)',\r\n                            'rgba(255,99,132,0.6)',\r\n                            'rgba(255,99,132,0.6)',\r\n                            'rgba(255,99,132,0.6)'\r\n                            \r\n                        ]\r\n                    },{\r\n                        label:'expense',\r\n                        data:expense,\r\n                        backgroundColor: [\r\n                            \r\n                            'rgba(54,152,235,0.6)',\r\n                            'rgba(54,152,235,0.6)',\r\n                            'rgba(54,152,235,0.6)',\r\n                            'rgba(54,152,235,0.6)',\r\n                            'rgba(54,152,235,0.6)'\r\n                            \r\n                        ]\r\n                    }]\r\n                }\r\n            });\r\n            this.setState({\r\n                chartData2:{\r\n                    labels:months,\r\n                    datasets:[{\r\n                        label:'Profit',\r\n                        data:profits,\r\n                        backgroundColor: [\r\n                            'rgba(255,99,132,0.6)',\r\n                            'rgba(255,99,132,0.6)',\r\n                            'rgba(255,99,132,0.6)',\r\n                            'rgba(255,99,132,0.6)',\r\n                            'rgba(255,99,132,0.6)'\r\n                            \r\n                        ]\r\n                    },{\r\n                        label:'Loss',\r\n                        data:loss,\r\n                        backgroundColor: [\r\n                            \r\n                            'rgba(54,152,235,0.6)',\r\n                            'rgba(54,152,235,0.6)',\r\n                            'rgba(54,152,235,0.6)',\r\n                            'rgba(54,152,235,0.6)',\r\n                            'rgba(54,152,235,0.6)'\r\n                            \r\n                        ]\r\n                    }]\r\n                }\r\n            });\r\n            this.setState({profitloss:pl});\r\n\r\n                this.setState({incomeExpense:income});\r\n            }).catch((err)=>{\r\n                toast(err, {position: toast.POSITION.TOP_CENTER, autoClose: 1000});\r\n            })\r\n      }\r\n      else if(res.data.status==false){\r\n          // alert(res.data.error)\r\n          toast(res.data.error, {position: toast.POSITION.TOP_CENTER, autoClose: 1000});\r\n      } \r\n   }\r\n   )\r\n   .catch(error => {\r\n      // alert(\"login first\");\r\n     toast(\"Login First!!\", {position: toast.POSITION.TOP_CENTER, autoClose: 1000});\r\n    })\r\n  }\r\n\r\nstatic defaultProps={\r\n    displayTitle:true,\r\n    displayLegend: true,\r\n    legendPosition: 'right'\r\n}\r\n\r\n  render() {\r\n    return ( \r\n      <div>\r\n        \r\n      <Bar\r\n      data={this.state.chartData1}\r\n      options={{\r\n          responsive:true,\r\n        title:{\r\n            display:this.props.displayTitle,\r\n            text:'Income and Expense',\r\n            fontSize:20\r\n      },\r\n    legend:{\r\n        display:true,\r\n        position: 'right',\r\n        labels:{\r\n            fontColor:'#000'\r\n        }\r\n    },\r\n    layout:{\r\n        padding:{\r\n            left:50,\r\n            right:0,\r\n            bottom:0,\r\n            top:0\r\n        }\r\n    }, \r\n    scales: {\r\n        yAxes: [{\r\n            ticks: {\r\n                beginAtZero: true\r\n            }\r\n        }]\r\n    },       \r\ntooltips:{\r\n    enabled: true\r\n}}}\r\n    />    \r\n\r\n    <Line\r\n          data={this.state.chartData2}\r\n          options={{\r\n            responsive:true,\r\n            title:{\r\n                display:this.props.displayTitle,\r\n                text:'Profit and Loss',\r\n                fontSize:20\r\n          },\r\n        legend:{\r\n            display:true,\r\n            position: 'right',\r\n            labels:{\r\n                fontColor:'#000'\r\n            }\r\n        },\r\n        layout:{\r\n            padding:{\r\n                left:50,\r\n                right:0,\r\n                bottom:0,\r\n                top:0\r\n            }\r\n        },        \r\n    tooltips:{\r\n        enabled: true\r\n    }}}\r\n        />\r\n        <div>           \r\n        <CSVLink data={this.state.incomeExpense}\r\n        filename={\"IncomeExpense.csv\"}\r\n        className=\"btn btn-primary\"\r\n        style={{margin:'1%'}}\r\n        >\r\n        Income and expense excel download\r\n        </CSVLink>\r\n        <CSVLink data={this.state.profitloss}\r\n        filename={\"ProfitLoss.csv\"}\r\n        className=\"btn btn-primary\"\r\n        >\r\n        Profit Loss Excel Document\r\n        </CSVLink>\r\n        </div>\r\n        <ToastContainer />\r\n       </div>\r\n    );\r\n  }\r\n}"]},"metadata":{},"sourceType":"module"}